# -*- coding: utf-8 -*-
"""Checking Anagrams.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/186k0GTHWZVY5PP8vExtOYplGZQIS9-y5
"""

### Time Complexity: O(n)
### Space Complexity: O(n)



import time

def checking_Time_Using_SET():
  string1 = input("Enter First String ").lower()
  string2 = input("Enter Second String ").lower()

  startTime1 = time.time()
  check_Using_SET(string1,string2)
  endTime1 = time.time()
  executionTime1 = endTime1 - startTime1
  print(f"Required Checking Time for using SET: {executionTime1}")


  startTime2 = time.time()
  check_Using_Sort(string1,string2)
  endTime2 = time.time()
  executionTime2 = endTime2 - startTime2
  print(f"Required Checking Time for using Sort: {executionTime2}")









def check_Using_SET(string1,string2):

    newString1 = set()
    newString2 = set()

    for i in string1:
       newString1.add(i)

    for i in string2:
       newString2.add(i)

    flag = False

    if len(newString1) == len(newString2):
        for i in newString1:
          if i in newString2:
            flag = True
          else:
            break

    print("Result: ")
    if flag == True:
      print("Two strings are anagrams")

    else:
      print("Two strings are not anagrams")






def check_Using_Sort(string1, string2):
  sortedString1 = sorted(string1)
  sortedString2 = sorted(string2)

  if sortedString1 == sortedString2:
    print("Two strings are anagrams")
  else:
    print("Two strings are not anagrams")


checking_Time_Using_SET()